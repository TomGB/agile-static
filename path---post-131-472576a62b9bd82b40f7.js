webpackJsonp([0xf8f5d716ecc],{945:function(e,t){e.exports={data:{tweetsJson:{from:"Emily Webber",date:"3 Feb 2015",tags:"#agile #le…",text:"You Need Feature Teams to Produce Features | Johanna Rothman, Management Consultant",searchResults:[{title:"You Need Feature Teams to Produce Features - Johanna Rothman ...",href:"https://www.jrothman.com/mpd/project-management/2015/02/you-need-feature-teams-to-produce-features/",description:"2 Feb 2015 ... Many organizations create teams by their architectural part: front end, back end, \nmiddleware. That may have worked back in the waterfall days. It doesn't work \nwell when you want to implement by feature. (For better images, see Managing \nthe Stream of Features in an Agile Program.) Pierce Wetter wrote this ..."},{title:"Do You Have Feature-itis? - Johanna Rothman, Management ...",href:"https://www.jrothman.com/mpd/agile/2011/06/do-you-have-feature-itis/",description:"22 Jun 2011 ... If you have, you are suffering from feature-itis. And, you have some options. Make \nsure that all your estimates include the necessary architectural work required to \ndo a good job. I don't know why teams don't do this as a matter of practice. (I \nsuspect that teams do not have access to the architects they need.) ..."},{title:'Defining "Scaling" Agile, Part 1: Creating Cross-Functional Feature ...',href:"https://www.jrothman.com/mpd/agile/2017/05/defining-scaling-agile-part-1-creating-cross-functional-feature-teams/",description:"22 May 2017 ... The next part in your “scaling” of agile is to move to cross-functional feature \nteams. That's where the team works together, in a collaborative fashion, to create \nfinished features. You might do this in iterations, especially if you've only heard of \nScrum. You might use a kanban board to see all the flow of work ..."}],index:131}},pathContext:{index:131}}}});
//# sourceMappingURL=path---post-131-472576a62b9bd82b40f7.js.map