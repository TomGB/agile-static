{"version":3,"sources":["webpack:///path---post-538-df5c70aa658fa06672a1.js","webpack:///./.cache/json/post-538.json"],"names":["webpackJsonp","1394","module","exports","data","tweetsJson","from","date","tags","text","searchResults","title","href","description","index","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,YAAcC,KAAA,eAAAC,KAAA,aAAAC,KAAA,eAAAC,KAAA,iCAAAC,gBAA0HC,MAAA,gDAAAC,KAAA,gFAAAC,YAAA,+UAA4eF,MAAA,2DAAAC,KAAA,kFAAAC,YAAA,0UAAofF,MAAA,wDAAAC,KAAA,sEAAAC,YAAA,sVAAgfC,MAAA,MAAeC,aAAgBD,MAAA","file":"path---post-538-df5c70aa658fa06672a1.js","sourcesContent":["webpackJsonp([262318881413290],{\n\n/***/ 1394:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"tweetsJson\":{\"from\":\"Emily Webber\",\"date\":\"3 Jun 2014\",\"tags\":\"#agile #lean\",\"text\":\"The Solution to Technical Debt\",\"searchResults\":[{\"title\":\"Crisp's Blog » The Solution to Technical Debt\",\"href\":\"https://blog.crisp.se/2013/07/12/henrikkniberg/the-solution-to-technical-debt\",\"description\":\"12 Jul 2013 ... The answer is not obvious, it's a business decision, so make sure you involve the \\npeople who are paying for it. If you decide to reduce your current technical debt, \\nmake that a clear decision: “We will Stop Writing Crappy Code, and Gradually \\nClean Up The Old Code”. Once you agree on this (and that's the ...\"},{\"title\":\"How to Reduce Tech Debt: A Practical Guide - DZone Agile\",\"href\":\"https://dzone.com/articles/how-to-reduce-tech-debt-a-practical-experience-gui-1\",\"description\":\"13 Oct 2017 ... Technical debt is a metaphor which explains the situation when you have two \\nchoices of adding functionality: a long-term good solution which needs lots of \\ntime or a quick but messy and unpredictable solution. When you choose an easy \\nsolution, you have tech debt which results in code problems, bugs, ...\"},{\"title\":\"Escaping the black hole of technical debt | Atlassian\",\"href\":\"https://www.atlassian.com/agile/software-development/technical-debt\",\"description\":\"There's a temptation on the development side to characterize architectural work \\nas technical debt. It may or may not be, depending on the nature of the change (\\ne.g., replacing a shortcut with the \\\"real\\\" solution vs. splitting a monolithic code \\nbase into microservices). On the other side, product management often feels \\nmore ...\"}],\"index\":538}},\"pathContext\":{\"index\":538}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---post-538-df5c70aa658fa06672a1.js","module.exports = {\"data\":{\"tweetsJson\":{\"from\":\"Emily Webber\",\"date\":\"3 Jun 2014\",\"tags\":\"#agile #lean\",\"text\":\"The Solution to Technical Debt\",\"searchResults\":[{\"title\":\"Crisp's Blog » The Solution to Technical Debt\",\"href\":\"https://blog.crisp.se/2013/07/12/henrikkniberg/the-solution-to-technical-debt\",\"description\":\"12 Jul 2013 ... The answer is not obvious, it's a business decision, so make sure you involve the \\npeople who are paying for it. If you decide to reduce your current technical debt, \\nmake that a clear decision: “We will Stop Writing Crappy Code, and Gradually \\nClean Up The Old Code”. Once you agree on this (and that's the ...\"},{\"title\":\"How to Reduce Tech Debt: A Practical Guide - DZone Agile\",\"href\":\"https://dzone.com/articles/how-to-reduce-tech-debt-a-practical-experience-gui-1\",\"description\":\"13 Oct 2017 ... Technical debt is a metaphor which explains the situation when you have two \\nchoices of adding functionality: a long-term good solution which needs lots of \\ntime or a quick but messy and unpredictable solution. When you choose an easy \\nsolution, you have tech debt which results in code problems, bugs, ...\"},{\"title\":\"Escaping the black hole of technical debt | Atlassian\",\"href\":\"https://www.atlassian.com/agile/software-development/technical-debt\",\"description\":\"There's a temptation on the development side to characterize architectural work \\nas technical debt. It may or may not be, depending on the nature of the change (\\ne.g., replacing a shortcut with the \\\"real\\\" solution vs. splitting a monolithic code \\nbase into microservices). On the other side, product management often feels \\nmore ...\"}],\"index\":538}},\"pathContext\":{\"index\":538}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/post-538.json\n// module id = 1394\n// module chunks = 262318881413290"],"sourceRoot":""}